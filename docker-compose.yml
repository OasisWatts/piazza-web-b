version: '3'
services:
  #open mysql server (DO NOT RECREATE OR DELETE DB CONTAINER)
  db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ekfkfktk2!
      TZ: Asia/Seoul
    volumes:
      - /home/db/mysql/data:/var/lib/mysql
      - /home/db/mysql/init:/docker-entrypoint-initdb.d
    platform: linux/x86_64
      # open network between containers to connect with node server
    networks: 
      - mysql_node
      # open node servers
  nodejs1:
    build: .
    container_name: brownie1
    ports:
      - 4416
    deploy:
      restart_policy:
        condition: on-failure
    networks: 
      - mysql_node
      - load_balance
    depends_on:
      - db # execute after mysql executed
        # open load balancer with nginx
  nodejs2:
    build: .
    container_name: brownie2
    ports:
      - 4416
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - mysql_node
      - load_balance
    depends_on:
      - db
  load-balancer:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /home/docker/nginx_proxy_manager/letsencrypt/live/npm-1/privkey.pem:/etc/nginx/ssl/webrownie/privkey.pem
      - /home/docker/nginx_proxy_manager/letsencrypt/live/npm-1/fullchain.pem:/etc/nginx/ssl/webrownie/fullchain.pem
    networks:
      - load_balance
    depends_on:
      - nodejs1
      - nodejs2

networks:
  mysql_node:
    name: mysql_node_net
    driver: bridge
  load_balance:
    name: load_balance_net
    driver: bridge
